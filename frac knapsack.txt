#include<bits/stdc++.h>
using namespace std;

struct Item
{
    int value;
    int weight;
};

class Solution
{
public:
    static bool comp(Item a, Item b)
    {
        double r1 = (double) a.value / (double) a.weight;
        double r2 = (double) b.value / (double) b.weight;
        return r1 > r2;
    }
    
    double fracKnapsack(int W, Item arr[], int n)
    {
        sort(arr, arr+n, comp);
        int curwt=0;
        double finalvalue=0.0;
        
        for(int i=0; i<n; i++)
        {
            if(curwt + arr[i].weight <= W)
            {
                curwt += arr[i].weight;
                finalvalue += arr[i].value;
            }
            else
            {
                int remain = W - curwt;
                finalvalue += (arr[i].value / (double) arr[i].weight) * (double) remain;
                break;
            }
        }
        return finalvalue;
    }
};

int main()
{
    int n, weight;
    
    cout<<"\nEnter Number of Items: ";
    cin>>n;
    
    Item arr[n];
    
    cout<<"Enter Value and weight for each Item:"<<endl;
    for(int i=0; i<n; i++)
    {
        cout<<"Enter Item "<<i+1<<": ";
        cin>>arr[i].value>>arr[i].weight;
    }
    
    cout<<"Enter Capacity of Knapsack: ";
    cin>>weight;
    
    Solution obj;
    double ans= obj.fracKnapsack(weight, arr, n);
    cout<<"\nMax Weight is "<<setprecision(2)<<fixed<<ans<<endl;
    
    return 0;
}